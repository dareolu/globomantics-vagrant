# Define variables
varDomain = "globomantics"
varNodeName = "master-node"
varHostEntries = ""
varVMMemory = 5120
varVMCPU = 4

#Build content for /etc/hosts file
$etchosts = <<SCRIPT
#!/bin/bash
cat > /etc/hosts <<EOF
127.0.0.1       localhost
#{varHostEntries}
EOF
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/xenial64"
  config.vm.provision "shell", path: "provision/setup-consul.sh", privileged: false
  config.vm.provision "shell", path: "provision/setup-ansible.sh", privileged: false
  config.vm.provision "shell", path: "provision/setup-docker.sh", privileged: false
  config.vm.provision "shell", path: "provision/setup-kubectl.sh", privileged: false
  config.vm.provision "shell", path: "provision/setup-java.sh", privileged: false
  config.vm.provision "shell", path: "provision/setup-elasticsearch.sh", privileged: false

  ['london'].each do |dc|

    ip_prefix = dc == 'china' ? '172.20.20.1' : '172.20.20.'

    (1..3).each do |i|
      config.vm.define "#{dc}-master-nodes#{i}" do |masternode|
        masternode.vm.hostname = "#{dc}-masternode#{i}"
        masternode.vm.network "private_network", ip: "#{ip_prefix}3#{i}"
        varHostEntries << "#{ip_prefix}4#{i}" "#{dc}-masternode#{i}.#{varDomain}" "#{dc}-masternode#{i}\n"
        masternode.vm.provision :shell, :inline => $etchosts
        masternode.vm.provider :virtualbox do |v|
          v.name = "#{dc}-#{varNodeName}#{i}".to_s
          v.gui = false
          v.customize ["modifyvm", :id, "--memory", "#{varVMMemory}".to_s]
          v.customize ["modifyvm", :id, "--cpus", "#{varVMCPU}".to_s]
         end
      end
    end
  end
end
